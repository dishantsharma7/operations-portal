// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Prisma Schema

model admin_user {
  id            Int      @id @default(autoincrement())
  firstName     String
  lastName      String
  emailAddress  String   @unique
  countryCode   String
  phoneNumber   String
  addressLine1  String
  addressLine2  String?
  city          String
  state         String
  country       String
  zipcode       String
  gender        String
  dateOfBirth   DateTime
  username      String   @unique
  password      String
  userImage     String?
  adminRoleID   Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  enabled       Boolean  @default(true)
  createdBy     String
  updatedBy     String

  // Relations
  // adminRole   

}

model client_user {
  id            Int      @id @default(autoincrement())
  firstName     String
  lastName      String
  emailAddress  String   @unique
  countryCode   String
  phoneNumber   String
  addressLine1  String
  addressLine2  String?
  city          String
  state         String
  country       String
  zipcode       String
  gender        String
  dateOfBirth   DateTime
  username      String   @unique
  password      String
  userImage     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  enabled       Boolean  @default(true)
  createdBy     String
  updatedBy     String
}

model writer_company_user {
  id            Int      @id @default(autoincrement())
  companyName   String
  firstName     String
  lastName      String
  emailAddress  String   @unique
  countryCode   String
  phoneNumber   String
  addressLine1  String
  addressLine2  String?
  city          String
  state         String
  country       String
  zipcode       String
  username      String   @unique
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  enabled       Boolean  @default(true)
  createdBy     String
  updatedBy     String

}

model writer_user {
  id            Int      @id @default(autoincrement())
  writerCompanyID Int    
  firstName     String
  lastName      String
  emailAddress  String   @unique
  countryCode   String
  phoneNumber   String
  addressLine1  String
  addressLine2  String?
  city          String
  state         String
  country       String
  zipcode       String
  gender        String
  dateOfBirth   DateTime
  username      String   @unique
  password      String
  userImage     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  enabled       Boolean  @default(true)
  createdBy     String
  updatedBy     String

  // Relations
  // writerCompany 
}

model admin_roles {
  id                String              @id @default(uuid())
  roleName          String              @unique
  slug              String              @unique
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  enabled           Boolean             @default(true)
  admin_permissions admin_permissions[] @relation("admin_permissionsToadmin_roles")
}

model admin_permissions {
  id                   String        @id @default(uuid())
  accessPermissionName String        @unique
  slug                 String        @unique
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  enabled              Boolean       @default(true)
  roleWithPermission   admin_roles[] @relation("admin_permissionsToadmin_roles")
}
